# Load General Packages
library(tidyverse)     # to enable tidyverse functions  
library(lmtest)        # comparing models
library(stats)         # useful general functions
library(devtools)
library(data.table)
library(dplyr)

# Load Time-Series Packages
library(fpp3)          # enables tsibble, and fable packages
library(forecast)      # for forecasting
library(tseries)       # for working with time-series data
library(strucchange)   # for detecting structural changes in time-series
library(imputeTS)      # for imputing missing values in time-series

# Load Time-Series Model Packages
library(mgcv)          # Frequentist GAM models
library(brms)          # Bayesian GAM models
library(bayesdfa)      # Bayesian Dynamic Factor Models
library(dlnm)          # Distributed lag GAM models
library(gratia)
library(prophet)

# Load Miscellaneous Packages
library(AMR)
library(sjlabelled)
library(patchwork)

# Read in Metadata
phen <- read_csv("Metadata.csv")

# Data Preprocessing
phen <- phen %>% 
  mutate(org = as.mo(org), 
         studys = ceiling(studyq / 2))

phen <- phen %>% 
  mutate(org = as.mo(Org), 
         studys = ceiling(studyq / 2))

vars <- c("sample_no", "protect", "study_id", "st131_gp", "Sex", "setting", "hospital", "department", "ST")
phen[vars] <- lapply(phen[vars], factor)

# Create Time-Series
# Genotype Time-Series
p6m <- phen %>% 
  group_by(ST, studyq) %>% 
  summarise(n = n(), .groups = 'drop') %>% 
  group_by(studyq) %>% 
  mutate(sum = sum(n), .groups = 'drop')

geno6m <- p6m %>% 
  pivot_wider(id_cols = c(studyq, sum), names_from = ST, values_from = n) %>% 
  mutate(across(everything(), ~ replace_na(.x, 0)))

# Semester Time-Series
p6m <- phen %>% 
  group_by(st131_gp, ST, studyq) %>% 
  summarise(n = n(), .groups = 'drop') %>% 
  group_by(studyq) %>% 
  mutate(sum = sum(n), pcst = n / sum, .groups = 'drop')

time3m <- tibble(
  studyq = rep(seq(1, 44, 1), 2),  
  date = rep(seq(as.Date('2010-01-01'), length.out = 44, by = '3 months'), 2)
)

p3m <- time3m %>% 
  mutate(month = yearmonth(date))

p3m <- p3m %>% 
  as_tsibble(index = month)

# Impute missing values
p3m <- p3m %>% 
  mutate(imp = na_kalman(pcst, model = "auto.arima"))

# Quarterly Time-Series
p3m <- phen %>% 
  group_by(st131_gp, studyq) %>% 
  summarise(n = n(), .groups = 'drop') %>% 
  group_by(studyq) %>% 
  mutate(sum = sum(n), pc131 = n / sum, .groups = 'drop')

time3m <- expand_grid(
  studyq = seq(1, 44, 1),
  st131_gp = factor(c("0", "1"))
)

p3m <- time3m %>% 
  left_join(p3m, by = c("studyq", "st131_gp"))

time3m <- tibble(
  date = rep(seq(as.Date('2010-01-01'), length.out = 44, by = '3 months'), 2)
)

p3m <- bind_cols(p3m, time3m) %>% 
  mutate(month = yearmonth(date)) %>% 
  as_tsibble(index = month, key = st131_gp)

# Impute missing values
p3m <- p3m %>% 
  mutate(imp = na_kalman(pc131, model = "auto.arima"))

# Fit GAM Models
# Quarterly Time-Series Analysis

# Limit data to model ST131 as % total
p3m_st <- p3m %>% filter(st131_gp == "1")

# Model A: % ST131
st3ma <- mgcv::gam(
  formula = pc131 ~ 1 + s(studyq, bs = "tp", k = 30, m = 3),
  family = binomial(link = "logit"),
  weight = sum,
  data = p3m_st
)

# Model diagnostics and plotting
summary(st3ma)
k.check(st3ma)
gratia::appraise(st3ma)
BIC(st3ma)
acf(st3ma$residuals)

# Plot Model Fit
gratia::draw(st3ma, fun = plogis, parametric = TRUE, ci_col = "steelblue", smooth_col = "steelblue", ncol = 3, nrow = 1, guides = "keep") +
  scale_y_continuous(limits = c(0, 1))

# Plot of Best Model vs. Observed
newdat <- p3m_st %>% select(studyq, st131_gp)
fit <- predict(st3ma, newdata = newdat, type = "response", se.fit = TRUE) %>% as_tibble()
fit <- fit %>%
  mutate(
    actual = p3m_st$pc131,
    studyq = p3m_st$studyq,
    lci = fit - (2 * se.fit),
    uci = fit + (2 * se.fit)
  )

stplot1 <- ggplot(fit) +
  geom_point(aes(studyq, actual, color = "Observed"), alpha = 0.5) +
  geom_line(aes(studyq, actual, color = "Observed"), alpha = 0.3) +
  geom_line(aes(studyq, fit, color = "Model fit")) +
  geom_ribbon(aes(studyq, ymin = lci, ymax = uci, fill = "95% CI"), alpha = 0.2) +
  scale_color_manual(values = c("Observed" = "steelblue", "Model fit" = "orange")) +
  scale_fill_manual(values = c("95% CI" = "orange")) +
  scale_x_continuous("Year and quarter", breaks = seq(1, 44, 4), labels = seq(2010, 2020, 1)) +
  scale_y_continuous("% ST-131", limits = c(0, 1.06), labels = scales::percent_format(accuracy = 1)) +
  theme(legend.title = element_blank())

stplot1

# Plot of First Derivatives
d <- gratia::derivatives(st3ma, order = 1, n = 132)
dplot1 <- ggplot(d, aes(data, derivatives)) + 
  geom_line(color = "steelblue") +
  geom_ribbon(aes(data, ymin = lower, ymax = upper), fill = "steelblue", alpha = 0.1) +
  scale_y_continuous("Change in %ST-131") +
  scale_x_continuous("Year and quarter", breaks = seq(1, 44, 4), labels = seq(2010, 2020, 1)) +
  geom_hline(aes(yintercept = 0), linetype = "dashed", color = "grey")

dplot1
